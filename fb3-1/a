/*calculator with AST */

%{
#include <stdio.h>
#include <stdlib.h>
#include "fb3-1.h"

%}

%union {
	struct ast %a'
	double d;

}

/* declear tokens */
%token <d> NUMBER 
%token EOL

%type <A> exp factor term 

%% 

calclist : /* nothing */
	| calclist exp EOL {
		printf("= %4.4g\n", eval($2));
		treefree($2);
		printf(">");
		}
	| calclist EOL {printf(">");};
	;
exp | factor
	| exp '+' factor {$$ = newast('+',$1, $3);} //ast pointer 
	| exp '-' factor {$$ = newast('-', $1, $3);} 
	;
factor | term
	|factor '*' term {$$ = newast('*', $1, $3);}
	|factor '/' term {$$ = newast('/', $1, $3);}
	;
term | NUMBER {$$ = newat($1);}
	|'|' term {$$ = newast(
